{"version":3,"sources":["../node_modules/game-of-life/dist/game-of-life.umd.js","index.js"],"names":["params","cols","rows","color","game","Game","gameStarted","undefined","canvasElement","document","getElementById","overlayElement","cardElement","play","playGame","style","display","classList","remove","reset","lol","m","s","c","floor","random","length","Math","pause","add","liveOut","window","requestAnimationFrame","addEventListener"],"mappings":"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","file":"src.95fc4ceb.js","sourceRoot":"../src","sourcesContent":["!function(t,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?o(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],o):o((t=t||self).GameOfLife={})}(this,function(t){\"use strict\";var o=(i.prototype.liveOut=function(){for(var t=JSON.parse(JSON.stringify(this.matrix)),o=0;o<this.options.cols;o++)for(var i=0;i<this.options.rows;i++){var s=this.calcNeighbours(o,i);this.matrix[o][i]||3!==s||(t[o][i]=1),this.matrix[o][i]&&(s<2||3<s)&&(t[o][i]=0)}return this.matrix=t,this.canvas.draw(t),t},i.prototype.randomize=function(){for(var t=0;t<this.options.cols;t++)for(var o=0;o<this.options.rows;o++)this.matrix[t]||(this.matrix[t]=Array(this.options.cols)),this.matrix[t][o]=.5<=Math.random()?1:0},i.prototype.calcNeighbours=function(t,o){function i(t,o){return t<0&&(t=s.options.cols-1),t>=s.options.cols&&(t=0),o<0&&(o=s.options.rows-1),o>=s.options.rows&&(o=0),s.matrix[t][o]}var s=this;return[i(t-1,o-1),i(t,o-1),i(t+1,o-1),i(t-1,o),i(t+1,o),i(t-1,o+1),i(t,o+1),i(t+1,o+1)].reduce(function(t,o){return t+o},0)},i);function i(t,o){this.options=o,this.canvas=new s(t,{rows:this.options.rows,cols:this.options.cols,color:this.options.color}),this.options.seed?this.matrix=this.options.seed:(this.matrix=[],this.randomize()),this.canvas.draw(this.matrix)}var s=(r.prototype.draw=function(t){if(!this.ctx)throw new Error(\"Can't get 2d context of canvas\");var o=parseInt(this.canvas.getAttribute(\"width\")||\"100\",10),i=parseInt(this.canvas.getAttribute(\"height\")||\"100\",10);this.ctx.clearRect(0,0,o,i);var s=o/this.options.cols,r=i/this.options.rows;this.ctx.strokeStyle=this.ctx.fillStyle=this.options.color?this.options.color:\"#d0b3d1\";for(var n=0;n<this.options.cols;n++)for(var e=0;e<this.options.rows;e++)t[n][e]&&this.ctx.fillRect(n*s,e*r,s,r)},r);function r(t,o){this.canvas=document.getElementById(t),this.options=o,this.ctx=this.canvas.getContext(\"2d\")}t.Game=o,Object.defineProperty(t,\"__esModule\",{value:!0})});\n","import \"./styles.scss\";\n\nimport { Game } from \"game-of-life\"\n\nconst params = {\n    cols: 400,\n    rows: 400,\n    color: \"gray\"\n};\n\nlet game = new Game(\"gameCanvas\", params);\nlet gameStarted = undefined;\n\nconst canvasElement = document.getElementById(\"gameCanvas\");\nconst overlayElement = document.getElementById(\"overlay\");\nconst cardElement = document.getElementById(\"card\");\n\ndocument.getElementById(\"playButton\").addEventListener(\"click\", play);\n\ndocument.getElementById(\"pauseButton\").addEventListener(\"click\", pause);\n\ndocument.getElementById(\"resetButton\").addEventListener(\"click\", () => {\n    pause();\n    reset();\n});\n\nfunction play() {\n    if (!gameStarted) gameStarted = 1;\n    playGame();\n\n    overlayElement.style.display = \"none\";\n    cardElement.style.display = \"none\";\n    canvasElement.classList.remove(\"blured\")\n}\n\nfunction reset() {\n    gameStarted = undefined;\n    params.color = '#' + (function lol(m, s, c) {\n        return s[m.floor(m.random() * s.length)] + (c && lol(m, s, c - 1));\n    })(Math, '0123456789ABCDEF', 4);\n    game = new Game(\"gameCanvas\", params);\n}\n\nfunction pause() {\n    canvasElement.classList.add(\"blured\");\n    overlayElement.style.display = \"\";\n    cardElement.style.display = \"\";\n    gameStarted = undefined;\n}\n\nfunction playGame() {\n    if (!gameStarted) return;\n    game.liveOut();\n    window.requestAnimationFrame(playGame)\n}\n"]}